AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'Wild Rydes Asynchronous Messaging Workshop - Lab 1

  '
Globals:
  Function:
    Timeout: 10
    Runtime: python3.7
    Tags:
      project: wild-rydes
      workshop: asynchronous-messaging-workshop
      author: aws
      owner: sajid.ali@trilogy.com
Resources:
  SubmitRideCompletionFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: SubmitRideCompletionFunction
      Handler: app.lambda_handler
      Environment:
        Variables:
          TABLE_NAME:
            Ref: RidesTable
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: RidesTable
      Events:
        WildRydes:
          Type: Api
          Properties:
            Path: /submit-ride-completion
            Method: post
    Tags:
    - Key: owner
      Value: sajid.ali@trilogy.com
    Metadata:
      SamResourceId: SubmitRideCompletionFunction
  CustomerAccountingFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: CustomerAccountingFunction
      Handler: app.lambda_handler
    Tags:
    - Key: owner
      Value: sajid.ali@trilogy.com
    Metadata:
      SamResourceId: CustomerAccountingFunction
  CustomerNotificationFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: CustomerNotificationFunction
      Handler: app.lambda_handler
    Tags:
    - Key: owner
      Value: sajid.ali@trilogy.com
    Metadata:
      SamResourceId: CustomerNotificationFunction
  ExtraordinaryRidesFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ExtraordinaryRidesFunction
      Handler: app.lambda_handler
    Tags:
    - Key: owner
      Value: sajid.ali@trilogy.com
    Metadata:
      SamResourceId: ExtraordinaryRidesFunction
  RidesTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName:
        Fn::Sub: Rides-${AWS::StackName}
      PrimaryKey:
        Name: id
        Type: String
    Tags:
    - Key: owner
      Value: sajid.ali@trilogy.com
Outputs:
  UnicornManagementServiceApiSubmitRideCompletionEndpoint:
    Description: API Gateway endpoint URL for Prod stage for SubmitRideCompletion
      function
    Value:
      Fn::Sub: https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/submit-ride-completion/
  SubmitRideCompletionFunction:
    Description: SubmitRideCompletionFunction Lambda Function ARN
    Value:
      Fn::GetAtt:
      - SubmitRideCompletionFunction
      - Arn
  CustomerAccountingFunction:
    Description: CustomerAccountingFunction Lambda Function ARN
    Value:
      Fn::GetAtt:
      - CustomerAccountingFunction
      - Arn
  CustomerNotificationFunction:
    Description: CustomerNotificationFunction Lambda Function ARN
    Value:
      Fn::GetAtt:
      - CustomerNotificationFunction
      - Arn
  ExtraordinaryRidesFunction:
    Description: ExtraordinaryRidesFunction Lambda Function ARN
    Value:
      Fn::GetAtt:
      - ExtraordinaryRidesFunction
      - Arn
  SubmitRideCompletionFunctionIamRole:
    Description: Implicit IAM Role created for SubmitRideCompletion function
    Value:
      Fn::GetAtt:
      - SubmitRideCompletionFunctionRole
      - Arn
  RidesTable:
    Description: Amazon DynamoDB table ARN for Rides table
    Value:
      Ref: RidesTable
